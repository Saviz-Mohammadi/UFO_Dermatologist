How to make the printing work:

The idea is to make a template html file with placeholders, and then use this template to make PDF files.


<!DOCTYPE html>
<html>
<head>
    <title>Template</title>
</head>
<body>
    <h1>{{title}}</h1>
    <p>{{content}}</p>
    <footer>{{footer}}</footer>
</body>
</html>



#include <QtWidgets>
#ifndef QT_NO_PRINTER
#include <QPrinter>
#endif
#include <QFile>
#include <QTextStream>

QString replacePlaceholders(const QString& templateContent, const QMap<QString, QString>& replacements) {
    QString modifiedContent = templateContent;
    for (auto it = replacements.constBegin(); it != replacements.constEnd(); ++it) {
        modifiedContent.replace("{{" + it.key() + "}}", it.value());
    }
    return modifiedContent;
}

int main(int argc, char *argv[])
{
    QApplication app(argc, argv);

    // Select the template file
    QString templateFileName = QFileDialog::getOpenFileName((QWidget*)0, "Select HTML Template", QString(), "*.html");
    if (templateFileName.isEmpty()) {
        QMessageBox::warning(0, "No File Selected", "You must select a valid HTML template file.");
        return -1;
    }

    // Read the HTML content from the template file
    QFile templateFile(templateFileName);
    if (!templateFile.open(QIODevice::ReadOnly | QIODevice::Text)) {
        QMessageBox::critical(0, "Error", "Failed to open the template file.");
        return -1;
    }

    QTextStream in(&templateFile);
    QString htmlContent = in.readAll();
    templateFile.close();

    // Get user inputs for placeholders
    QMap<QString, QString> replacements;
    replacements["title"] = QInputDialog::getText(0, "Input", "Enter title:");
    replacements["content"] = QInputDialog::getText(0, "Input", "Enter content:");
    replacements["footer"] = QInputDialog::getText(0, "Input", "Enter footer:");

    // Replace placeholders with user inputs
    htmlContent = replacePlaceholders(htmlContent, replacements);

    // Save the PDF file
    QString fileName = QFileDialog::getSaveFileName((QWidget*)0, "Export PDF", QString(), "*.pdf");
    if (fileName.isEmpty()) {
        return 0; // User cancelled the operation
    }
    if (QFileInfo(fileName).suffix().isEmpty()) {
        fileName.append(".pdf");
    }

    QPrinter printer(QPrinter::PrinterResolution);
    printer.setOutputFormat(QPrinter::PdfFormat);
    printer.setPaperSize(QPrinter::A4);
    printer.setOutputFileName(fileName);

    QTextDocument doc;
    doc.setHtml(htmlContent); // Set modified HTML content
    doc.setPageSize(printer.pageRect().size());
    doc.print(&printer);

    QMessageBox::information(0, "Success", "PDF has been exported successfully.");
    return 0;
}

